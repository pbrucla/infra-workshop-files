apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-issuer
  namespace: cert-manager # The cert-manager namespace is the default cluster-wide namespace. Don't change it.
spec:
  acme:
    email: user@example.com # Put your email here, or certbot@acmcyber.com if you donâ€™t want to use yours.
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-account-key # The name of the secret to store account credentials.
    solvers:
      - http01:
          ingress:
            class: traefik # The ingress controller you're using.
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: a-namespace # Specify the same namespace that the rest of the app is located
  annotations: # Annotations are like labels except they convey meaning instead of being used for matching.
    cert-manager.io/cluster-issuer: letsencrypt-issuer # We have to annotate the name of the issuer we're using.
spec:
  ingressClassName: traefik # We're using traefik.
  rules:
    - host: testing.acmcyber.com # The subdomain you want to expose.
      http:
        paths:
          - path: / # This will match all paths.
            pathType: Prefix
            backend:
              service:
                name: nginx-service # The name of the service you're exposing.
                port:
                  number: 80 # The port that you want to expose.
  tls: # HTTPS configuration
    - hosts:
        - testing.acmcyber.com # The list of hosts to provision a certificate for.
      secretName: tls-test-ingress # The name of the secret to store the certificate in.
